/* src/app.css */
/* Global theme variables */
:root[data-theme="dark"] {
    --bg-color: #0a0a0a;
    --bg-surface: #111111;
    --bg-elevated: #1a1a1a;
    --text-color: #ffffff;
    --text-muted: #888888;
    
    /* Primary gradient colors (Orange to Blue) */
    --primary-start: #FF3E00; /* Svelte Orange */
    --primary-end: #264DE4; /* Deep Blue */
    --primary-gradient: linear-gradient(135deg, var(--primary-start) 0%, var(--primary-end) 100%);
    --primary-gradient-hover: linear-gradient(135deg, #FF5722 0%, #3F51B5 100%);
    --primary-color: #FF3E00; /* For solid color usage */
    --primary-hover: #FF5722;
    --primary-muted: rgba(255, 62, 0, 0.2);
    --primary-glow: rgba(255, 62, 0, 0.7);
    --primary-text-contrast: #ffffff;
    
    /* Semantic Colors */
    --success-color: #36B37E; /* Green (Used for 'active' status, was secondary-color) */
    --warning-color: #FFAB00; /* Amber */
    --error-color: #FF5630; /* Red */
    --error-hover: #FF7452; /* Hover state for error color */
    --info-color: #4C9AFF; /* Blue */
    
    /* Surface and borders */
    --border-color: #333333;
    --border-hover: #555555;
    
    /* Card specific styles */
    --card-bg: linear-gradient(135deg, #111 0%, #1a1a1a 100%);
    --card-border: var(--border-color);
    --card-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
    --card-shadow-hover: 0 8px 24px rgba(255, 62, 0, 0.15);
    
    /* Interactive elements */
    --input-bg: rgba(255, 255, 255, 0.05);
    --input-border: #333333;
    --input-focus: #FF3E00;
    --button-shadow: 0 4px 12px rgba(255, 62, 0, 0.3);

    /* Destructive Button & Text Variables */
    --destructive-button-bg: #E04D29; /* A strong, clear red for the button */
    --destructive-button-color: white;
    --destructive-button-border: none;
    --destructive-button-hover-bg: #CC331B; /* Darker red on hover for feedback */
    --destructive-button-shadow-specific: 0 6px 16px rgba(224, 77, 41, 0.4); /* Prominent shadow */
    --destructive-text-color: #FF5630; /* Match the general error color for text */

    /* Department Specific Colors (new) */
    --management-department-color: #A052E6; /* Example: Purple for Management */
}

:root[data-theme="light"] {
    --bg-color: #ffffff;
    --bg-surface: #f8f9fa;
    --bg-elevated: #f1f3f4;
    --text-color: #212529;
    --text-muted: #6c757d;
    
    /* Primary gradient colors (adjusted for light mode) */
    --primary-start: #E53E3E; /* Darker red-orange for light mode */
    --primary-end: #3182CE; /* Darker blue for light mode */
    --primary-gradient: linear-gradient(135deg, var(--primary-start) 0%, var(--primary-end) 100%);
    --primary-gradient-hover: linear-gradient(135deg, #C53030 0%, #2C5282 100%);
    --primary-color: #E53E3E;
    --primary-hover: #C53030;
    --primary-muted: rgba(229, 62, 62, 0.15);
    --primary-glow: rgba(229, 62, 62, 0.4);
    --primary-text-contrast: #ffffff;
    
    /* Semantic Colors */
    --success-color: #38A169; /* Green (Used for 'active' status) */
    --warning-color: #D69E2E; /* Amber */
    --error-color: #E53E3E; /* Red */
    --error-hover: #C53030; /* Hover state for error color in light theme */
    --info-color: #3182CE; /* Blue */
    
    /* Surface and borders */
    --border-color: #e2e8f0;
    --border-hover: #cbd5e0;
    
    /* Card specific styles */
    --card-bg: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
    --card-border: var(--border-color);
    --card-shadow: 0 2px 4px rgba(0, 0, 0, 0.06);
    --card-shadow-hover: 0 8px 16px rgba(229, 62, 62, 0.12);
    
    /* Interactive elements */
    --input-bg: #ffffff;
    --input-border: #e2e8f0;
    --input-focus: #E53E3E;
    --button-shadow: 0 4px 12px rgba(229, 62, 62, 0.2);

    /* Destructive Button & Text Variables */
    --destructive-button-bg: #C62828; /* A darker, more contrasting red for light mode */
    --destructive-button-color: white;
    --destructive-button-border: none;
    --destructive-button-hover-bg: #B71C1C; /* Even darker red on hover for light mode */
    --destructive-button-shadow-specific: 0 6px 16px rgba(198, 40, 40, 0.3);
    --destructive-text-color: #D32F2F; /* Match the light theme error color for text */

    /* Department Specific Colors (new) */
    --management-department-color: #6A1B9A; /* Example: Darker purple for Management */
}

/* Global box-sizing */
*, *::before, *::after {
    box-sizing: border-box;
}

body {
    background-color: var(--bg-color);
    color: var(--text-color);
    margin: 0;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,
        Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    transition: background-color 0.3s ease, color 0.3s ease;
}

/* Common utility classes */
.container {
    width: 100%;
    padding-left: 1rem;
    padding-right: 1rem;
    margin-left: auto;
    margin-right: auto;
}

/* Enhanced card component styles */
.card {
    background: var(--card-bg);
    border: 1px solid var(--card-border);
    border-radius: 16px;
    padding: 0;
    box-shadow: var(--card-shadow);
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    overflow: hidden;
}

.card:hover {
    transform: translateY(-4px);
    box-shadow: var(--card-shadow-hover);
}

.card-header {
    padding: 20px 24px;
    border-bottom: 1px solid var(--card-border);
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.card-body {
    padding: 20px 24px;
}

.card-footer {
    padding: 16px 24px;
    border-top: 1px solid var(--card-border);
    display: flex;
    gap: 8px;
}

.card-title {
    color: var(--text-color);
    font-size: 18px;
    font-weight: 600;
    margin: 0;
}

.card-badge {
    background: var(--primary-gradient);
    color: var(--primary-text-contrast); /* Use variable */
    padding: 4px 10px;
    border-radius: 20px;
    font-size: 12px;
    font-weight: 600;
}

/* Enhanced button styles */
.btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    padding: 10px 20px;
    font-weight: 600;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.2s ease;
    font-size: 14px;
    border: none;
    text-decoration: none;
}

.btn-primary {
    background: var(--primary-gradient);
    color: var(--primary-text-contrast);
}

.btn-primary:hover {
    background: var(--primary-gradient-hover);
    transform: translateY(-1px);
    box-shadow: var(--button-shadow);
}

.btn-secondary {
    /* Removed explicit dark/light theme overrides from here */
    background: none; /* Changed to match simplified components */
    color: var(--text-color);
    border: 1px solid var(--border-color);
}

.btn-secondary:hover {
    /* Removed explicit dark/light theme overrides from here */
    border-color: var(--primary-color); /* Changed to match simplified components */
    color: var(--primary-color); /* Changed to match simplified components */
}

.btn-outline {
    background-color: transparent;
    color: var(--primary-color);
    border: 1px solid var(--primary-color);
}

.btn-outline:hover {
    background: var(--primary-gradient);
    color: var(--primary-text-contrast);
    transform: translateY(-1px);
}

.btn-danger {
    background-color: var(--error-color);
    color: white; /* Or var(--primary-text-contrast) if that's more semantic */
}

.btn-danger:hover {
    background-color: var(--error-hover); /* Use variable for hover */
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(255, 86, 48, 0.3); /* Still uses specific RGB values, consider a general --shadow-error if multiple elements use this exact shadow */
}

.btn-success {
    background-color: var(--success-color); /* Changed to success-color */
    color: white; /* Or var(--primary-text-contrast) */
}

.btn-success:hover {
    background-color: var(--success-color); /* You might want a --success-hover variable here too */
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(54, 179, 126, 0.3); /* Same comment as btn-danger shadow */
}

/* Enhanced badge/tag */
.badge {
    display: inline-flex;
    align-items: center;
    padding: 6px 12px;
    font-size: 12px;
    font-weight: 600;
    border-radius: 20px;
    background: var(--primary-gradient);
    color: var(--primary-text-contrast); /* Use variable */
}

.badge-secondary {
    background-color: var(--success-color); /* Changed to success-color */
    color: var(--primary-text-contrast); /* Use variable */
}

.badge-warning {
    background-color: var(--warning-color);
    color: var(--primary-text-contrast); /* Use variable */
}

.badge-error {
    background-color: var(--error-color);
    color: var(--primary-text-contrast); /* Use variable */
}

.badge-outline {
    background-color: transparent;
    border: 1px solid var(--primary-color);
    color: var(--primary-color);
}

/* Form elements */
.form-input,
.form-select,
.form-textarea {
    width: 100%;
    background-color: var(--input-bg); /* Use variable */
    border: 1px solid var(--input-border); /* Use variable */
    color: var(--text-color); /* Use variable */
    padding: 10px 12px;
    border-radius: 8px;
    font-size: 14px;
    transition: all 0.2s ease;
}

.form-input:focus,
.form-select:focus,
.form-textarea:focus {
    outline: none;
    border-color: var(--input-focus);
    box-shadow: 0 0 0 2px var(--primary-muted);
}

.form-label {
    display: block;
    margin-bottom: 6px;
    font-size: 14px;
    font-weight: 500;
    color: var(--text-color);
}

/* Status indicators (These are now redundant and can be removed if components use semantic colors directly) */
/*
.status-active {
    color: var(--success-color);
}

.status-inactive {
    color: var(--text-muted);
}

.status-warning {
    color: var(--warning-color);
}

.status-error {
    color: var(--error-color);
}
*/

/* Progress bars */
.progress-bar {
    width: 100%;
    height: 8px;
    background-color: var(--bg-elevated); /* Use variable for background */
    border-radius: 4px;
    overflow: hidden;
}

.progress-fill {
    height: 100%;
    background: var(--primary-gradient);
    border-radius: 4px;
    transition: width 0.3s ease;
}

/* Icon wrapper */
.icon-bg {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    border-radius: 12px;
    background-color: var(--primary-muted);
    color: var(--primary-color);
}

.icon-bg-gradient {
    background: var(--primary-gradient);
    color: var(--primary-text-contrast); /* Use variable */
}

/* Avatar styles */
.avatar {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    overflow: hidden;
    border: 2px solid var(--border-color);
    background: var(--primary-gradient);
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--primary-text-contrast); /* Use variable */
    font-weight: 600;
}

.avatar-lg {
    width: 80px;
    height: 80px;
    font-size: 28px;
}

.avatar-sm {
    width: 32px;
    height: 32px;
    font-size: 12px;
}

/* Toggle switches */
.toggle {
    position: relative;
    width: 48px;
    height: 24px;
    background-color: var(--border-color); /* Use border-color for base */
    border-radius: 12px;
    transition: all 0.2s ease;
    cursor: pointer;
}

.toggle.active {
    background: var(--primary-gradient);
}

.toggle::before {
    content: '';
    position: absolute;
    top: 2px;
    left: 2px;
    width: 20px;
    height: 20px;
    background-color: var(--primary-text-contrast); /* Use variable */
    border-radius: 50%;
    transition: all 0.2s ease;
}

.toggle.active::before {
    transform: translateX(24px);
}

/* Text utilities */
.text-primary {
    color: var(--primary-color);
}

.text-secondary {
    color: var(--success-color); /* Changed to success-color */
}

.text-muted {
    color: var(--text-muted);
}

.text-error {
    color: var(--error-color);
}

.text-success {
    color: var(--success-color); /* Changed to success-color */
}

.text-warning {
    color: var(--warning-color);
}

/* Background utilities */
.bg-primary {
    background: var(--primary-gradient);
    color: var(--primary-text-contrast); /* Use variable */
}

.bg-surface {
    background-color: var(--bg-surface);
}

.bg-elevated {
    background-color: var(--bg-elevated);
}

/* Border utilities */
.border {
    border: 1px solid var(--border-color);
}

.border-primary {
    border: 1px solid var(--primary-color);
}

.border-radius {
    border-radius: 8px;
}

.border-radius-lg {
    border-radius: 16px;
}

/* Shadow utilities */
.shadow-sm {
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.shadow {
    box-shadow: var(--card-shadow);
}

.shadow-lg {
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
}

.shadow-primary {
    box-shadow: var(--button-shadow);
}

/* Animation utilities */
.animate-fade-in {
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.5s ease;
}

.animate-fade-in.active {
    opacity: 1;
    transform: translateY(0);
}

.animate-slide-up {
    transform: translateY(-4px);
    transition: transform 0.2s ease;
}

/* Standard spacing classes (no changes needed) */
.p-0 { padding: 0; }
.p-1 { padding: 0.25rem; }
.p-2 { padding: 0.5rem; }
.p-3 { padding: 1rem; }
.p-4 { padding: 1.5rem; }
.p-5 { padding: 2rem; }
.p-6 { padding: 3rem; }

.m-0 { margin: 0; }
.m-1 { margin: 0.25rem; }
.m-2 { margin: 0.5rem; }
.m-3 { margin: 1rem; }
.m-4 { margin: 1.5rem; }
.m-5 { margin: 2rem; }
.m-6 { margin: 3rem; }

.mb-1 { margin-bottom: 0.25rem; }
.mb-2 { margin-bottom: 0.5rem; }
.mb-3 { margin-bottom: 1rem; }
.mb-4 { margin-bottom: 1.5rem; }
.mb-5 { margin-bottom: 2rem; }

.mt-1 { margin-top: 0.25rem; }
.mt-2 { margin-top: 0.5rem; }
.mt-3 { margin-top: 1rem; }
.mt-4 { margin-top: 1.5rem; }
.mt-5 { margin-top: 2rem; }

/* Gap utilities (no changes needed) */
.gap-1 { gap: 0.25rem; }
.gap-2 { gap: 0.5rem; }
.gap-3 { gap: 1rem; }
.gap-4 { gap: 1.5rem; } /* Corrected from margin */
.gap-5 { gap: 2rem; }

/* Flex utilities (no changes needed) */
.flex {
    display: flex;
}

.flex-col {
    flex-direction: column;
}

.items-center {
    align-items: center;
}

.justify-center {
    justify-content: center;
}

.justify-between {
    justify-content: space-between;
}

/* Grid utilities (no changes needed) */
.grid {
    display: grid;
}

.grid-cols-1 {
    grid-template-columns: repeat(1, 1fr);
}

.grid-cols-2 {
    grid-template-columns: repeat(2, 1fr);
}

.grid-cols-3 {
    grid-template-columns: repeat(3, 1fr);
}

.grid-cols-4 {
    grid-template-columns: repeat(4, 1fr);
}

/* Responsive variants (no changes needed) */
@media (width >= 40rem) { /* sm - 640px */
    .container {
        max-width: 40rem;
    }
    
    .sm\:grid-cols-2 {
        grid-template-columns: repeat(2, 1fr);
    }
    
    .sm\:grid-cols-3 {
        grid-template-columns: repeat(3, 1fr);
    }
}

@media (width >= 48rem) { /* md - 768px */
    .container {
        max-width: 48rem;
    }
    
    .md\:grid-cols-2 {
        grid-template-columns: repeat(2, 1fr);
    }
    
    .md\:grid-cols-3 {
        grid-template-columns: repeat(3, 1fr);
    }
    
    .md\:grid-cols-4 {
        grid-template-columns: repeat(4, 1fr);
    }
    
    .p-md-3 { padding: 1rem; }
    .p-md-4 { padding: 1.5rem; }
    .p-md-5 { padding: 2rem; }
}

@media (width >= 64rem) { /* lg - 1024px */
    .container {
        max-width: 64rem;
    }
    
    .lg\:grid-cols-3 {
        grid-template-columns: repeat(3, 1fr);
    }
    
    .lg\:grid-cols-4 {
        grid-template-columns: repeat(4, 1fr);
    }
    
    .lg\:grid-cols-5 {
        grid-template-columns: repeat(5, 1fr);
    }
}

@media (width >= 80rem) { /* xl - 1280px */
    .container {
        max-width: 80rem;
    }
}